; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Quotes around values are not supported, except in the case of
;    the environment= options as shown below.
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".
;  - Command will be truncated if it looks like a config file comment, e.g.
;    "command=bash -c 'foo ; bar'" will truncate to "command=bash -c 'foo ".
;

[unix_http_server]
file=/root/shop/supervisord.sock  ; the path to the socket file
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)

;[inet_http_server]         ; inet (TCP) server disabled by default
;port=127.0.0.1:9001        ; ip_address:port specifier, *:port for all iface
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)

[supervisord]
logfile=/root/shop/log/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/root/shop/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
user=root                    ; setuid to this UNIX account at startup; recommended if root
;umask=022                   ; process file creation umask; default 022
;identifier=supervisor       ; supervisord identifier, default is 'supervisor'
;directory=/tmp              ; default is not to cd during start
;nocleanup=true              ; don't clean up tempfiles at start; default false
;childlogdir=/tmp            ; 'AUTO' child log dir, default $TEMP
;environment=KEY="value"     ; key value pairs to add to environment
;strip_ansi=false            ; strip ansi escape codes in logs; def. false

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///root/shop/supervisord.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as in [*_http_server] if set
;password=123                ; should be same as in [*_http_server] if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; The sample program section below shows all possible program subsection values.
; Create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:nginx]
command=nginx -g 'daemon off;' -c /root/shop/dependent/nginx/nginx.conf
directory=/root/shop                                             ; 项目的文件夹路径
startsecs=3                                                                             ; 启动时间
stopwaitsecs=3                                                                          ; 终止等待时间
autostart=true                                                                         ; 是否自动启动
autorestart=true                                                                       ; 是否自动重启
startretries = 3
user=root
stopasgroup=true
killasgroup=true
stdout_logfile=./log/nginx.out                       ; log 日志
stdout_logfile_maxbytes=5MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=5     ; # of stdout logfile backups (0 means none, default 10)
stderr_logfile=./log/nginx.err 
stderr_logfile_maxbytes=5MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=5     ;

[program:redis]
command=redis-server /root/shop/dependent/redis.conf
directory=/root/shop                                             ; 项目的文件夹路径                                                                             ; 启动时间
startsecs=3                                                                             ; 启动时间
stopwaitsecs=3                                                                          ; 终止等待时间
autostart=true                                                                         ; 是否自动启动
autorestart=true                                                                       ; 是否自动重启
startretries = 3
user=root
stopasgroup=true
killasgroup=true
stdout_logfile=./log/redis.out                       ; log 日志
stdout_logfile_maxbytes=5MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=5     ; # of stdout logfile backups (0 means none, default 10)
stderr_logfile=./log/redis.err 
stderr_logfile_maxbytes=5MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=5     ;

[program:django]
command=venv/bin/gunicorn -c /root/shop/dependent/gunicorn_config.py shop.wsgi              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
directory=/root/shop                ; directory to cwd to before exec (def no cwd)
startsecs=3                   ; # of secs prog must stay up to be running (def. 1)
stopwaitsecs=3               ; max num secs to wait b4 SIGKILL (default 10)
autostart=true                ; start at supervisord start (default: true)
autorestart=true        ; when to restart if exited after running (def: unexpected)
startretries=3                ; max # of serial start failures when starting (default 3)
user=root                   ; setuid to this UNIX account to run the program
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
stdout_logfile=./log/gunicorn.out        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=5MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=5     ; # of stdout logfile backups (0 means none, default 10)
stderr_logfile=./log/gunicorn.err        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=5MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=5     ; # of stderr logfile backups (0 means none, default 10)

[program:celery]
command=venv/bin/celery -A celery_tasks.tasks worker -l info -c 2
directory=%(here)s                                              ; 项目的文件夹路径
startsecs=5                                                                             ; 启动时间
stopwaitsecs=5                                                                          ; 终止等待时间
autostart=true                                                                         ; 是否自动启动
autorestart=true                                                                       ; 是否自动重启
startretries = 5
user = root
stopasgroup=true
killasgroup=true
stdout_logfile=./log/celery.out                       ; log 日志
stderr_logfile=./log/celery.err                       ; 错误日志
stdout_logfile_maxbytes=5MB
stdout_logfile_backups=5
stderr_logfile_maxbytes=5MB
stderr_logfile_backups=5
